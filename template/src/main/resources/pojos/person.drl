/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package pojos;
unit PersonUnit; 

//CHANGE NAMES
rule "Cardiorespiratory arrest"
dialect "java"
    when
        $person : /people[conscious == false,
            breathing == false,
            bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
            electric_shock == false,
            major_trauma == false,
            seizure == false]
    then 
        modify($person) {setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST))}
        cardiorespiratoryArrestpeople.add($person);
end

// Rule 2
rule "Cardiorespiratory arrest by electric shock"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
                     electric_shock == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_ELECTROCUTION)) }
end

// Rule 3
rule "Cardiorespiratory arrest with major trauma but no car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
                     electric_shock == false,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_MAJORTRAUMA)) }
end

// Rule 4
rule "Cardiorespiratory arrest with major trauma but no car accident and bleeding"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LOT,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_MAJORTRAUMA_BLEEDING)) }
end

// Rule 5
rule "Major trauma by car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == true,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CAR)) }
end

// Rule 6
rule "Cardiorespiratory arrest with major trauma by car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock== false,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_CAR)) }
end

// Rule 7
rule "Cardiorespiratory arrest with major trauma by car accident and bleeding"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LOT,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_CAR_BLEEDING)) }
end

// Rule 8
rule "Choking: partial airway blockage"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.SOME,
                     cough == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.PARTIAL_CHOKING)) }
end

// Rule 9
rule "Choking: total airway blockage"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.FEW || emit_words == EmitWords.NONE]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.TOTAL_CHOKING)) }
end

// Rules 10 is unspecified, so skipping to Rule 11

// Rule 11
rule "Conscious Breathing No Major Trauma Legs Up"
when
    $person : /people[conscious == false,
                     breathing == true,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == false,
                     vomit == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_BREATHING_NO_MAJ_TRAUMA_LEGS_UP)) }
end

// Rule 12
rule "Conscious Breathing No Major Trauma Recovery Position"
when
    $person : /people[conscious == false,
                     breathing == true,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == false,
                     vomit == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_BREATHING_NO_MAJ_TRAUMA_RECOVERY_POS)) }
end

// Rule 13
rule "Dizziness Lay Down"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LOT,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.DIZZINESS_LAY_DOWN)) }
end

// Rule 14
rule "Conscious Severe Bleeding Pressure"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LOT,
                     bleeding == Bleeding.A_LOT]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_SEVERE_BLEEDING_PRESSURE)) }
end

// Rule 15
rule "Seizure No Breathing"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock == false,
                     major_trauma == false,
                     seizure == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.SEIZURE_NO_BREATHING)) }
end

// Rule 16
rule "Intoxication Breathing Problems"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.SOME || emit_words == EmitWords.NONE,
                     cough == false,
                     possible_poisoning == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.INTOXICATION_BREATHING_PROBLEMS)) }
end

// Rule 17
rule "Allergic Reaction With Vomit"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.SOME || emit_words == EmitWords.NONE,
                     cough == false,
                     possible_poisoning == false,
                     vomit == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.ALLERGIC_REACTION_WITH_VOMIT)) }
end

// Rule 18
rule "Allergic Reaction Without Vomit"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.SOME || emit_words == EmitWords.NONE,
                     cough == false,
                     possible_poisoning == false,
                     vomit == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.ALLERGIC_REACTION_WITHOUT_VOMIT)) }
end

// Rules 19, 20 unspecified, so skipping to Rule 21

// Rule 21
rule "Dizzy With Breathing Problems"
when
    $person : /people[conscious == true,
                     dizzy == Dizzy.A_LITTLE,
                     difficulty_breathing == DifficultyBreathing.A_LITTLE || difficulty_breathing == DifficultyBreathing.NO]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.DIZZY_WITH_BREATHING_PROBLEMS)) }
end

// Rule 23
rule "Major Trauma Car Accident No Breathing"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock == false,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.MAJOR_TRAUMA_CAR_ACCIDENT_NO_BREATHING)) }
end

// Rule 24
rule "Major Trauma No Car Accident No Breathing"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock == false,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.MAJOR_TRAUMA_NO_CAR_ACCIDENT_NO_BREATHING)) }
end

// Rule 25
rule "Severe Bleeding No Major Trauma"
when
    $person : /people[conscious == false,
                     breathing == false,
                     bleeding == Bleeding.A_LOT,
                     major_trauma == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.SEVERE_BLEEDING_NO_MAJOR_TRAUMA)) }
end

// Rule 26
rule "Conscious Breathing No Bleeding Major Trauma No Car Accident"
when
    $person : /people[conscious == false,
                     breathing == true,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_BREATHING_NO_BLEEDING_MAJOR_TRAUMA_NO_CAR)) }
end

// Rule 27
rule "Conscious Breathing Severe Bleeding No Major Trauma"
when
    $person : /people[conscious == false,
                     breathing == true,
                     bleeding == Bleeding.A_LOT,
                     major_trauma == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_BREATHING_SEVERE_BLEEDING_NO_MAJOR_TRAUMA)) }
end