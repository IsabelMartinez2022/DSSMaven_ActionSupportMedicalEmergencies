/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package pojos;
unit PersonUnit; 

// Rule 1
rule "Cardiorespiratory arrest"
dialect "java"
    when
        $person : /people[conscious == false,
            breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
            bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
            electric_shock == false,
            major_trauma == false,
            seizure == false]
    then 
        modify($person) {setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST))}
end

// Rule 2
rule "Cardiorespiratory arrest by electric shock"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
                     electric_shock == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_ELECTROCUTION)) }
end

// Rule 3
rule "Cardiorespiratory arrest with major trauma but no car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding== Bleeding.A_LITTLE || bleeding== Bleeding.NO,
                     electric_shock == false,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_MAJORTRAUMA)) }
end

// Rule 4
rule "Cardiorespiratory arrest and bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding == Bleeding.A_LOT,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_MAJORTRAUMA_BLEEDING)) }
end

// Rule 5
rule "Major trauma by car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CAR)) }
end

// Rule 6
rule "Cardiorespiratory arrest with major trauma by car accident and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock== false,
                     major_trauma == true,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_CAR)) }
end

// Rule 7
rule "Cardiorespiratory arrest by car accident and bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding == Bleeding.A_LOT,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CARDIOARREST_CAR_BLEEDING)) }
end

// Rule 8
rule "Choking: partial airway blockage"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == true,
                     cough == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.PARTIAL_CHOKING)) }
end

// Rule 9
rule "Choking: total airway blockage"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.TOTAL_CHOKING)) }
end

// Rule 10
rule "Heart attack"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LOT]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.HEART_ATTACK)) }
end

// Rule 11
rule "Fainting and no vomit"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == false,
                     vomit == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.FAINTING)) }
end

// Rule 12
rule "Fainting and vomit"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == false,
                     vomit == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.FAINTING_VOMIT)) }
end

// Rule 13
rule "Dizziness"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LOT,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.DIZZINESS)) }
end

// Rule 14
rule "Severe bleeding while conscious"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LOT,
                     bleeding == Bleeding.A_LOT]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CONS_SEVERE_BLEEDING)) }
end

// Rule 15
rule "Seizure"
when
    $person : /people[conscious == false,
                     breathing == Breathing.NO|| breathing== Breathing.UNABLE_TO_CHECK,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     electric_shock == false,
                     major_trauma == false,
                     seizure == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.SEIZURE)) }
end

// Rule 16
rule "Poisoning"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == true,
                     cough == false,
                     possible_poisoning == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.POISONING)) }
end

// Rule 17
rule "Anaphylaxis without vomit"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == true,
                     cough == false,
                     possible_poisoning == false,
                     vomit == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.ANAPHYLAXIS)) }
end


// Rule 18
rule "Anaphylaxis with vomit"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LOT,
                     emit_words == EmitWords.YES,
                     cough == false,
                     possible_poisoning == false,
                     vomit == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.ANAPHYLAXIS_VOMIT)) }
end


// Rule 19
rule "Stroke"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LITTLE || difficulty_breathing == DifficultyBreathing.NO,
                     communication_problems == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.STROKE)) }
end

// Rule 20
rule "No medical emergency found"
when
    $person : /people[conscious == true,
                     chest_pain == ChestPain.A_LITTLE|| chest_pain == ChestPain.NO,
                     dizzy == Dizzy.A_LITTLE || dizzy == Dizzy.NO,
                     difficulty_breathing == DifficultyBreathing.A_LITTLE || difficulty_breathing == DifficultyBreathing.NO,
                     communication_problems == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.NOEMERGENCYFOUND)) }
end

//Rule 21
rule "Major trauma and a little/no bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LITTLE || bleeding == Bleeding.NO,
                     major_trauma == true,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.MAJOR_TRAUMA)) }
end

// Rule 22
rule "Major trauma and bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LOT,
                     car_accident == false]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.MAJOR_TRAUMA_BLEEDING)) }
end

// Rule 23
rule "Major trauma by car accident and bleeding"
when
    $person : /people[conscious == false,
                     breathing == Breathing.YES,
                     bleeding == Bleeding.A_LOT,
                     car_accident == true]
then
    modify($person) { setProtocol(Protocol.PROTOCOLS_MAP.get(ProtocolType.CAR_BLEEDING)) }
end